self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[3].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[3].use[2]!./node_modules/next/dist/compiled/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[3].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[3].use[4]!./components/Filters/Filter/styles.module.scss":
/*!*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[3].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[3].use[2]!./node_modules/next/dist/compiled/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[3].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[3].use[4]!./components/Filters/Filter/styles.module.scss ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/next/dist/compiled/css-loader/api.js */ "./node_modules/next/dist/compiled/css-loader/api.js");
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".styles_Filter__2y9v2 {\n  padding-left: 26px;\n  padding-bottom: 22px;\n  margin-bottom: 27px;\n  border-bottom: 1px solid #e0ddce;\n}\n.styles_Filter__2y9v2 .styles_header__33OKB {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n}\n.styles_Filter__2y9v2 .styles_header__33OKB h2 {\n  margin: 0;\n  font-size: 18px;\n  line-height: 21px;\n  letter-spacing: 0.3px;\n  color: #383834;\n}\n.styles_Filter__2y9v2 .styles_header__33OKB i {\n  display: block;\n}\n.styles_Filter__2y9v2 .styles_search__MIbSG {\n  margin-bottom: 10px;\n  padding-bottom: 6px;\n  font-family: LucidaGrande;\n  font-size: 14px;\n  line-height: 16px;\n  color: #605f5c;\n  border: none;\n  border-bottom: 2px solid #14a2b8;\n  outline: none;\n}\n.styles_Filter__2y9v2 .styles_checkBoxes__BOKt9 {\n  display: flex;\n  flex-direction: column;\n  font-size: 14px;\n  line-height: 16px;\n  color: #605f5c;\n  /* Hide the browser's default checkbox */\n  /* Create a custom checkbox */\n  /* On mouse-over, add a grey background color */\n  /* .container:hover input ~ .checkmark {\n    background-color: #ccc;\n  } */\n  /* When the checkbox is checked, add a blue background */\n  /* Create the checkmark/indicator (hidden when not checked) */\n  /* Show the checkmark when checked */\n  /* Style the checkmark/indicator */\n}\n.styles_Filter__2y9v2 .styles_checkBoxes__BOKt9 .styles_container__bUKO9 {\n  display: block;\n  position: relative;\n  padding-left: 21px;\n  margin-bottom: 12px;\n  cursor: pointer;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n.styles_Filter__2y9v2 .styles_checkBoxes__BOKt9 .styles_container__bUKO9 input {\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n}\n.styles_Filter__2y9v2 .styles_checkBoxes__BOKt9 .styles_checkmark__1nCDe {\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 13px;\n  width: 13px;\n  border: 1.5px solid #979797;\n  border-radius: 2.5px;\n}\n.styles_Filter__2y9v2 .styles_checkBoxes__BOKt9 .styles_container__bUKO9 input:checked ~ .styles_checkmark__1nCDe {\n  background-color: #0f7c91;\n  border: none;\n}\n.styles_Filter__2y9v2 .styles_checkBoxes__BOKt9 .styles_checkmark__1nCDe:after {\n  content: \"\";\n  position: absolute;\n  display: none;\n}\n.styles_Filter__2y9v2 .styles_checkBoxes__BOKt9 .styles_container__bUKO9 input:checked ~ .styles_checkmark__1nCDe:after {\n  display: block;\n}\n.styles_Filter__2y9v2 .styles_checkBoxes__BOKt9 .styles_container__bUKO9 .styles_checkmark__1nCDe:after {\n  top: 0;\n  left: 3px;\n  width: 6px;\n  height: 8px;\n  border: solid white;\n  border-width: 0 1px 1px 0;\n  -webkit-transform: rotate(45deg);\n  transform: rotate(25deg);\n}", "",{"version":3,"sources":["webpack://styles.module.scss"],"names":[],"mappings":"AAAA;EACE,kBAAA;EACA,oBAAA;EACA,mBAAA;EACA,gCAAA;AACF;AAAE;EACE,aAAA;EACA,8BAAA;EACA,mBAAA;AAEJ;AADI;EACE,SAAA;EACA,eAAA;EACA,iBAAA;EACA,qBAAA;EACA,cAAA;AAGN;AADI;EACE,cAAA;AAGN;AAAE;EACE,mBAAA;EACA,mBAAA;EACA,yBAAA;EACA,eAAA;EACA,iBAAA;EACA,cAAA;EACA,YAAA;EACA,gCAAA;EACA,aAAA;AAEJ;AAAE;EACE,aAAA;EACA,sBAAA;EACA,eAAA;EACA,iBAAA;EACA,cAAA;EAcA,wCAAA;EASA,6BAAA;EAaA,+CAAA;EACA;;KAAA;EAIA,wDAAA;EAMA,6DAAA;EAOA,oCAAA;EAKA,kCAAA;AA/CJ;AAVI;EACE,cAAA;EACA,kBAAA;EACA,kBAAA;EACA,mBAAA;EACA,eAAA;EACA,yBAAA;EAEA,qBAAA;EACA,iBAAA;AAYN;AARI;EACE,kBAAA;EACA,UAAA;EACA,eAAA;EACA,SAAA;EACA,QAAA;AAUN;AANI;EACE,8BAAA;UAAA,sBAAA;EACA,kBAAA;EACA,MAAA;EACA,OAAA;EACA,YAAA;EACA,WAAA;EAEA,2BAAA;EACA,oBAAA;AAON;AAEI;EACE,yBAAA;EACA,YAAA;AAAN;AAII;EACE,WAAA;EACA,kBAAA;EACA,aAAA;AAFN;AAMI;EACE,cAAA;AAJN;AAQI;EACE,MAAA;EACA,SAAA;EACA,UAAA;EACA,WAAA;EACA,mBAAA;EACA,yBAAA;EACA,gCAAA;EAEA,wBAAA;AANN","sourcesContent":[".Filter {\n  padding-left: 26px;\n  padding-bottom: 22px;\n  margin-bottom: 27px;\n  border-bottom: 1px solid #e0ddce;\n  .header {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 20px;\n    h2 {\n      margin: 0;\n      font-size: 18px;\n      line-height: 21px;\n      letter-spacing: 0.3px;\n      color: #383834;\n    }\n    i {\n      display: block;\n    }\n  }\n  .search {\n    margin-bottom: 10px;\n    padding-bottom: 6px;\n    font-family: LucidaGrande;\n    font-size: 14px;\n    line-height: 16px;\n    color: #605f5c;\n    border: none;\n    border-bottom: 2px solid #14a2b8;\n    outline: none;\n  }\n  .checkBoxes {\n    display: flex;\n    flex-direction: column;\n    font-size: 14px;\n    line-height: 16px;\n    color: #605f5c;\n\n    .container {\n      display: block;\n      position: relative;\n      padding-left: 21px;\n      margin-bottom: 12px;\n      cursor: pointer;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      -ms-user-select: none;\n      user-select: none;\n    }\n\n    /* Hide the browser's default checkbox */\n    .container input {\n      position: absolute;\n      opacity: 0;\n      cursor: pointer;\n      height: 0;\n      width: 0;\n    }\n\n    /* Create a custom checkbox */\n    .checkmark {\n      box-sizing: border-box;\n      position: absolute;\n      top: 0;\n      left: 0;\n      height: 13px;\n      width: 13px;\n      //background-color: #eee;\n      border: 1.5px solid #979797;\n      border-radius: 2.5px;\n    }\n\n    /* On mouse-over, add a grey background color */\n    /* .container:hover input ~ .checkmark {\n      background-color: #ccc;\n    } */\n\n    /* When the checkbox is checked, add a blue background */\n    .container input:checked ~ .checkmark {\n      background-color: #0f7c91;\n      border: none;\n    }\n\n    /* Create the checkmark/indicator (hidden when not checked) */\n    .checkmark:after {\n      content: '';\n      position: absolute;\n      display: none;\n    }\n\n    /* Show the checkmark when checked */\n    .container input:checked ~ .checkmark:after {\n      display: block;\n    }\n\n    /* Style the checkmark/indicator */\n    .container .checkmark:after {\n      top: 0;\n      left: 3px;\n      width: 6px;\n      height: 8px;\n      border: solid white;\n      border-width: 0 1px 1px 0;\n      -webkit-transform: rotate(45deg);\n      -ms-transform: rotate(45deg);\n      transform: rotate(25deg);\n    }\n  }\n}\n"],"sourceRoot":""}]);
// Exports
___CSS_LOADER_EXPORT___.locals = {
	"Filter": "styles_Filter__2y9v2",
	"header": "styles_header__33OKB",
	"search": "styles_search__MIbSG",
	"checkBoxes": "styles_checkBoxes__BOKt9",
	"container": "styles_container__bUKO9",
	"checkmark": "styles_checkmark__1nCDe"
};
module.exports = ___CSS_LOADER_EXPORT___;


/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,